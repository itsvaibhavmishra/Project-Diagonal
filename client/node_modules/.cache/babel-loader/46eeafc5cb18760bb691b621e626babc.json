{"ast":null,"code":"var _jsxFileName = \"D:\\\\More\\\\Projects\\\\Project-Diagonal\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport io from \"socket.io-client\"; // used to establish a connection with socket.io server\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  const joinRoom = () => {\n    if (username !== \"\" && room !== \"\") {\n      // user cannot join if any of the field is empty\n      socket.emit(\"join_room\", room); // \"join_room\" is event where room is passed as data to main.js\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Diagonal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      onChange: event => {\n        setUsername(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Room ID\",\n      onChange: event => {\n        setRoom(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Connect for Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EvQ3yTzpkY6BE+Nt7fmIxnkn+xo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useState","socket","connect","App","username","setUsername","room","setRoom","joinRoom","emit","event","target","value"],"sources":["D:/More/Projects/Project-Diagonal/client/src/App.js"],"sourcesContent":["import './App.css';\nimport io from \"socket.io-client\";   // used to establish a connection with socket.io server\nimport { useState } from \"react\";\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  const joinRoom = () => {\n\n    if (username !== \"\" && room !== \"\") {   // user cannot join if any of the field is empty\n      socket.emit(\"join_room\", room)  // \"join_room\" is event where room is passed as data to main.js\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n    <h2>Diagonal</h2>\n    {/* tracking changes on username and room id */}\n    <input type=\"text\" placeholder='Username' onChange = {(event) => {setUsername(event.target.value);}}/>    \n    <input type=\"text\" placeholder='Room ID' onChange = {(event) => {setRoom(event.target.value);}}/>\n    <button>Connect for Chat</button>\n\n  </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,EAAP,MAAe,kBAAf,C,CAAqC;;AACrC,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAW,uBAAX,CAAf;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMQ,QAAQ,GAAG,MAAM;IAErB,IAAIJ,QAAQ,KAAK,EAAb,IAAmBE,IAAI,KAAK,EAAhC,EAAoC;MAAI;MACtCL,MAAM,CAACQ,IAAP,CAAY,WAAZ,EAAyBH,IAAzB,EADkC,CACF;IACjC;EAEF,CAND;;EAQA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAGA;MAAO,IAAI,EAAC,MAAZ;MAAmB,WAAW,EAAC,UAA/B;MAA0C,QAAQ,EAAKI,KAAD,IAAW;QAACL,WAAW,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;MAAiC;IAAnG;MAAA;MAAA;MAAA;IAAA,QAHA,eAIA;MAAO,IAAI,EAAC,MAAZ;MAAmB,WAAW,EAAC,SAA/B;MAAyC,QAAQ,EAAKF,KAAD,IAAW;QAACH,OAAO,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;MAA6B;IAA9F;MAAA;MAAA;MAAA;IAAA,QAJA,eAKA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAvBQT,G;;KAAAA,G;AAyBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}