{"ast":null,"code":"var _jsxFileName = \"D:\\\\More\\\\Projects\\\\Project-Diagonal\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport io from \"socket.io-client\"; // used to establish a connection with socket.io server\n\nimport { useState } from \"react\";\nimport ChatBoxContainer from \"./chat-box-container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [showChat, setShowChat] = useState(false);\n\n  const joinRoom = () => {\n    if (username !== \"\" && room !== \"\") {\n      // user cannot join if any of the field is empty\n      socket.emit(\"join_room\", room); // \"join_room\" is event where room is passed as data to main.js\n\n      setShowChat(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !showChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinChatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Diagonal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        autoFocus: true,\n        onChange: event => {\n          setUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room ID\",\n        onChange: event => {\n          setRoom(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Connect for Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ChatBoxContainer, {\n      username: username,\n      room: room,\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PNnIyDYILVrwEYCLw6+QQQ0bQ6k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useState","ChatBoxContainer","socket","connect","App","username","setUsername","room","setRoom","showChat","setShowChat","joinRoom","emit","event","target","value"],"sources":["D:/More/Projects/Project-Diagonal/client/src/App.js"],"sourcesContent":["import './App.css';\nimport io from \"socket.io-client\";   // used to establish a connection with socket.io server\nimport { useState } from \"react\";\nimport ChatBoxContainer from \"./chat-box-container\";\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [showChat, setShowChat] = useState(false);\n\n  const joinRoom = () => {\n\n    if (username !== \"\" && room !== \"\") {   // user cannot join if any of the field is empty\n      socket.emit(\"join_room\", room);  // \"join_room\" is event where room is passed as data to main.js\n      setShowChat(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n    {/* seperating chat menu from login page */}\n    {!showChat ? (\n        <div className='joinChatContainer'>\n          <h2>Diagonal</h2>\n          <input type=\"text\" placeholder='Username' autoFocus onChange = {(event) => {setUsername(event.target.value);}}/>    \n          <input type=\"text\" placeholder='Room ID' onChange = {(event) => {setRoom(event.target.value);}}/>\n          <button onClick={joinRoom}>Connect for Chat</button>\n        </div>\n      ) : (\n        <ChatBoxContainer username={username} room={room} socket={socket} />\n      \n    )}\n  </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,EAAP,MAAe,kBAAf,C,CAAqC;;AACrC,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAACI,OAAH,CAAW,uBAAX,CAAf;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;EAEA,MAAMW,QAAQ,GAAG,MAAM;IAErB,IAAIN,QAAQ,KAAK,EAAb,IAAmBE,IAAI,KAAK,EAAhC,EAAoC;MAAI;MACtCL,MAAM,CAACU,IAAP,CAAY,WAAZ,EAAyBL,IAAzB,EADkC,CACD;;MACjCG,WAAW,CAAC,IAAD,CAAX;IACD;EACF,CAND;;EAQA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,UAEC,CAACD,QAAD,gBACG;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAO,IAAI,EAAC,MAAZ;QAAmB,WAAW,EAAC,UAA/B;QAA0C,SAAS,MAAnD;QAAoD,QAAQ,EAAKI,KAAD,IAAW;UAACP,WAAW,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;QAAiC;MAA7G;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAO,IAAI,EAAC,MAAZ;QAAmB,WAAW,EAAC,SAA/B;QAAyC,QAAQ,EAAKF,KAAD,IAAW;UAACL,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;QAA6B;MAA9F;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAQ,OAAO,EAAEJ,QAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,gBAQG,QAAC,gBAAD;MAAkB,QAAQ,EAAEN,QAA5B;MAAsC,IAAI,EAAEE,IAA5C;MAAkD,MAAM,EAAEL;IAA1D;MAAA;MAAA;MAAA;IAAA;EAVJ;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GA9BQE,G;;KAAAA,G;AAgCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}